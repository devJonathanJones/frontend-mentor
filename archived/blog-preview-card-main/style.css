@charset "utf-8";
@import url('https://fonts.googleapis.com/css2?family=Figtree:wght@600;800&display=swap');
/***
    The new CSS reset - version 1.8.5 (last updated 14.6.2023)
    GitHub page: https://github.com/elad2412/the-new-css-reset
***/

/*
    Remove all the styles of the "User-Agent-Stylesheet", except for the 'display' property
    - The "symbol *" part is to solve Firefox SVG sprite bug
    - The "html" attribute is exclud, because otherwise a bug in Chrome breaks the CSS hyphens property (https://github.com/elad2412/the-new-css-reset/issues/36)
 */
*:where(:not(html, iframe, canvas, img, svg, video, audio):not(svg *, symbol *)) {
    all: unset;
    display: revert;
}

/* Preferred box-sizing value */
*,
*::before,
*::after {
    box-sizing: border-box;
}

/* Reapply the pointer cursor for anchor tags */
a, button {
    cursor: revert;
}

/* Remove list styles (bullets/numbers) */
ol, ul, menu {
    list-style: none;
}

/* For images to not be able to exceed their container */
img {
    max-inline-size: 100%;
    max-block-size: 100%;
}

/* removes spacing between cells in tables */
table {
    border-collapse: collapse;
}

/* Safari - solving issue when using user-select:none on the <body> text input doesn't working */
input, textarea {
    -webkit-user-select: auto;
}

/* revert the 'white-space' property for textarea elements on Safari */
textarea {
    white-space: revert;
}

/* minimum style to allow to style meter element */
meter {
    -webkit-appearance: revert;
    appearance: revert;
}

/* preformatted text - use only for this feature */
:where(pre) {
    all: revert;
}

/* reset default text opacity of input placeholder */
::placeholder {
    color: unset;
}

/* remove default dot (â€¢) sign */
::marker {
    content: initial;
}

/* fix the feature of 'hidden' attribute.
   display:revert; revert to element instead of attribute */
:where([hidden]) {
    display: none;
}

/* revert for bug in Chromium browsers
   - fix for the content editable attribute will work properly.
   - webkit-user-select: auto; added for Safari in case of using user-select:none on wrapper element */
:where([contenteditable]:not([contenteditable="false"])) {
    -moz-user-modify: read-write;
    -webkit-user-modify: read-write;
    overflow-wrap: break-word;
    -webkit-line-break: after-white-space;
    -webkit-user-select: auto;
}

/* apply back the draggable feature - exist only in Chromium and Safari */
:where([draggable="true"]) {
    -webkit-user-drag: element;
}

/* Revert Modal native behavior */
:where(dialog:modal) {
    all: revert;
}


/* Custom Properties */

:root {
    --clr-yellow: hsl(47, 88%, 63%);
    --clr-white: hsl(0, 0%, 100%);
    --clr-grey: hsl(0, 0%, 50%);
    --clr-black: hsl(0, 0%, 7%);

    --ff-main: 'Figtree', sans-serif;

    --fw-bold: 600;
    --fw-xbold: 800;

    --fs-small: 1.4rem;
    --fs-med: 1.6rem;
    --fs-large: 2rem;
}



/* Typography */

html {
    font-size: 62.5%;
    font-family: var(--ff-main);
}

.card > span:first-of-type {
    font-size: var(--fs-med);
}

.card span, .card p {
    font-size: var(--fs-small);
}

h1 {
    font-size: var(--fs-large);
}

p {
    color: var(--clr-grey);
}

h1, .author {
    font-weight: var(--fw-xbold);
}

/* General Design */

body {
    background: var(--clr-yellow);
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    height: 100vh;
}

.card {
    background: var(--clr-white);
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    width: 33rem;
    height: 50rem;
    padding: 2rem;
    border-radius: 2rem;
    border: 1px solid black;
    box-shadow: 1rem 1rem 0px 0px rgba(0,0,0,1);
}

.card > span:first-of-type {
    background: var(--clr-yellow);
    align-self: flex-start;
    padding: .5rem;
    border-radius: .5rem;
}

.author img {
    height: 3rem;
    margin-right: 1rem;
}
.author {
    display: flex;
    align-items: center;
}

h1:hover {
    color: var(--clr-yellow);
    cursor: pointer;
}

.card:hover {
    box-shadow: 1.5rem 1.5rem 0px 0px rgba(0,0,0,1)
}